*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*
*  CLASS input parameter file  *
*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*

> This example of input file, intended for CLASS beginners, lists all
> possibilities with detailed comments.  You can use a more concise version, in
> which only the arguments in which you are interested would appear.  Only
> lines containing an equal sign not preceded by a sharp sign "#" are
> considered by the code. Hence, do not write an equal sign within a comment,
> the whole line would be interpreted as relevant input. Input files must have
> an extension ".ini".

----------------------------
----> background parameters:
----------------------------

h =0.6712
T_cmb = 2.7255


3) baryon density: either 'Omega_b' or 'omega_b' (default: 'omega_b' set to
   0.022032)
#Omega_b =
omega_b = 0.0222

4) ultra-relativistic species / massless neutrino density: either 'N_ur' or
N_ur = 3.046

5) density of cdm (cold dark matter): 'Omega_cdm' or 'omega_cdm' (default:
   'omega_cdm' set to 0.12038)
#Omega_cdm =
omega_cdm = 0.1203

Omega_k = 0.
# Omega_Lambda = 0.7


8b) equation of state parameter (p/rho equal to w0+wa(1-a/a0) ) and sound speed
    of the fluid (this is the sound speed defined in the frame comoving with
    the fluid, i.e. obeying to the most sensible physical definition)

w0_fld = -1.
wa_fld = 0.
cs2_fld = 1


--------------------------------
----> thermodynamics parameters:
--------------------------------

recombination = RECFAST
reio_parametrization = reio_camb

#z_reio = 11.357
tau_reio = 0.065

reionization_exponent = 1.5
reionization_width = 0.5
helium_fullreio_redshift = 3.5
helium_fullreio_width = 0.5


----------------------------------------------------
----> define which perturbations should be computed:
----------------------------------------------------

1.a) list of output spectra requested:
- 'tCl' for temperature Cls,
- 'pCl' for polarization Cls,
- 'lCl' for CMB lensing potential Cls,
- 'nCl' (or 'dCl') for density number count Cls,
- 'sCl' for galaxy lensing potential Cls,
- 'mPk' for total matter power spectrum P(k) infered from gravitational potential,
- 'dTk' (or 'mTk') for density transfer functions for each species,
- 'vTk' for velocity transfer function for each species.
By defaut, the code will try to compute the following cross-correlation Cls (if
available): temperature-polarisation, temperature-CMB lensing, polarization-CMB
lensing, and density-lensing. Other cross-correlations are not computed because
they would slow down the code considerably.

Can be left blank if you do not want to evolve cosmological perturbations at
all. (default: set to blanck, no perturbation calculation)

#output = tCl,pCl,lCl
output = tCl,pCl,lCl,mPk
#output = mPk,mTk


2) if you want an estimate of the non-linear P(k) and Cls, enter 'halofit' or
   'Halofit' or 'HALOFIT' for Halofit; otherwise leave blank
   (default: blank, linear P(k) and Cls)

non linear = halofit


4) list of modes ('s' for scalars, 'v' for vectors, 't' for tensors). More than
   one letter allowed, can be attached or separated by arbitrary characters;
   letters can be small or capital.
   (default: set to 's')

modes = s
#modes = s,t

5) relevant only if you ask for 'tCl, lCl' and/or 'pCl, lCl': if you want the
   spectrum of lensed Cls, enter a word containing the letter 'y' or 'Y'
   (default: no lensed Cls)
lensing = yes


---------------------------------------------
----> define primordial perturbation spectra:
---------------------------------------------

k_pivot = 0.05

2.a.2) scalar adiabatic perturbations: curvature power spectrum value at pivot scale ('A_s' or 'ln10^{10}A_s'), tilt at the same scale 'n_s', and tilt running 'alpha_s' (default: set 'A_s' to 2.215e-9, 'n_s' to 0.9619, 'alpha_s' to 0)
A_s = 2.09e-9
#ln10^{10}A_s = 3.0980
n_s = 0.96
alpha_s = 0.


-------------------------------------
----> define format of final spectra:
-------------------------------------

l_max_scalars = 20000
l_max_tensors = 500
#l_max_lss = 600

2) maximum k in P(k), 'P_k_max_h/Mpc' in units of h/Mpc or 'P_k_max_1/Mpc' in
   units of 1/Mpc. If scalar Cls are also requested, a minimum value is
   automatically imposed (the same as in scalar Cls computation)
   (default: set to 0.1h/Mpc)

P_k_max_h/Mpc = 1.
#P_k_max_1/Mpc = 0.7

3) value(s) 'z_pk' of redshift(s) for P(k,z) output file(s); can be ordered
   arbitrarily, but must be separated by comas (default: set 'z_pk' to 0)

z_pk = 0
#z_pk = 0., 1.2, 3.5


7a) file name root 'root' for all output files (if Cl requested, written to
    '<root>cl.dat'; if P(k) requested, written to '<root>pk.dat'; plus similar
    files for scalars, tensors, pairs of initial conditions, etc.; if file with
    input parameters requested, written to '<root>parameters.ini') (default:
    the input module sets automatically 'root' to 'output/<thisfilename>N_',
    where N is the first available integer number, starting from 00, to avoid
    erasing the output of previous runs)

#root = output/planck15_

7b) do you want headers at the beginning of each output file (giving precisions
    on the output units/ format) ? If 'headers' set to something containing the
    letter 'y' or 'Y', headers written, otherwise not written
    (default: written)

headers = yes

7c) in all output files, do you want columns to be normalized and ordered with
    the default CLASS definitions or with the CAMB definitions (often idential
    to the CMBFAST one) ? Set 'format' to either 'class', 'CLASS', 'camb' or
    'CAMB' (default: 'class')

format = class

7d) Do you want to write a table of background quantitites in a file? This will
    include H, densities, Omegas, various cosmological distances, sound
    horizon, etc., as a function of conformal time, proper time, scale factor.
    File created if 'write background'  set to something containing the letter
    'y' or 'Y', file written, otherwise not written (default: not written)

write background = yes

7e) Do you want to write a table of thermodynamics quantitites in a file? File
    is created if 'write thermodynamics' is set to something containing the
    letter 'y' or 'Y'. (default: not written)

write thermodynamics = no

7h) Do you want to have all input/precision parameters which have been read
    written in file '<root>parameters.ini', and those not written in file
    '<root>unused_parameters' ? If 'write parameters' set to something
    containing the letter 'y' or 'Y', file written, otherwise not written
    (default: not written)

write parameters = no

7i) Do you want a warning written in the standard output when an input
    parameter or value could not be interpreted ? If 'write warnings' set to
    something containing the letter 'y' or 'Y', warnings written, otherwise not
    written (default: not written)

write warnings =

----------------------------------------------------
----> amount of information sent to standard output:
----------------------------------------------------

Increase integer values to make each module more talkative (default: all set to 0)

input_verbose = 1
background_verbose = 1
thermodynamics_verbose = 1
perturbations_verbose = 1
transfer_verbose = 1
primordial_verbose = 1
spectra_verbose = 1
nonlinear_verbose = 1
lensing_verbose = 1
output_verbose = 1
